define('master/view/graph', [
  'jquery',
  'underscore',
  'backbone',
  'snap',
  'suncalc'
], function($, _, Backbone, Snap, SunCalc) {

  'use strict';

  var background;
  
  return Backbone.View.extend({

    events: {},

    defaults: {
      xOffset: 0,
      yOffset: 0,
      width: 360
    
    },

    el: '#panel-3',

    svg: Snap.select("#twelvehour"),

    /**
     * initialize()
     */
    initialize: function(options) {
      var view = this;
      _.bindAll(this);
     
      App.cache.events.on('weather:data', function(data){
        view.parseWeather(data);
        view.rect = view.svg.rect(0, view.weatherQuality(0)-10, '1px', '20px').attr({'stroke': '#fff'}); 
      })
      App.cache.events.on('update:pos', function(data){
        var pos = Math.floor( 12*(data/100) );
        view.rect.animate({x: view.defaults.width*(data/100), y: view.weatherQuality(pos)-10 }, 100);
        //view.svg.circle(view.defaults.width*(data/100), view.weatherQuality(pos), 2)
      }); 
      
      var s = view.svg;
      background = view.svg.rect(0, 0, '288px', '100px').attr({fill: 'none'});
      view.drawIntervals(12);

      //var tree = "M134.88,0.24, c0.4,0,0.8,0,1.2,0, c1.318,0.561,2.292,1.425,3.032,2.712,c7.78,13.547,15.611,27.065,23.427,40.592, c2.679,4.635,5.362,9.268,8.027,13.911, c1.807,3.148,0.698,5.975-2.722,7.007,c-0.84,0.253-1.684,0.496-2.523,0.751, c-2.438,0.742-2.956,2.026-1.692,4.213,c10.39,17.993,20.781,35.984,31.171,53.976,c0.719,1.246,1.455,2.482,2.142,3.746 ,c1.405,2.586-0.024,6.357-3.172,6.56,c-2.607,0.167-5.19,0.814-7.768,1.328,c-1.683,0.335-2.405,1.783-1.772,3.37 ,c0.191,0.479,0.449,0.934,0.709,1.381,c13.859,23.787,27.722,47.572,41.583,71.358,c1.589,2.727,3.221,5.431,4.752,8.19 ,c1.489,2.684-0.056,6.264-2.83,6.627,c-1.817,0.237-3.653,0.337-5.479,0.521,c-3.134,0.316-6.272,0.601-9.396,0.994 ,c-1.911,0.241-2.802,1.733-2.214,3.58,c0.238,0.749,0.619,1.467,1.023,2.147,c16.433,27.652,32.889,55.29,49.305,82.952 ,c3.091,5.207,6.028,10.505,9.037,15.761,c0,0.16,0,0.32,0,0.48,c-0.074,0.141-0.179,0.272-0.219,0.423 ,c-0.841,3.157-1.703,3.831-4.925,3.831,c-37.433,0-74.864,0-112.297,0,c-1.924,0-1.924,0.002-1.925,1.963 ,c0,20.196,0.001,40.392,0,60.588,c0,1.575-0.002,1.58-1.565,1.58,c-9.479,0.002-18.956,0.001-28.435,0.001 ,c-1.768,0-1.769-0.002-1.769-1.745,c0-20.035,0-40.071,0-60.107,c0-0.4-0.023-0.801,0.002-1.199,c0.048-0.75-0.243-1.132-1.035-1.082 ,c-0.438,0.027-0.879,0.002-1.319,0.002,c-36.433,0-72.865,0-109.297,0,c-1.2,0-2.402-0.042-3.599,0.012 ,c-1.183,0.053-2.138-0.374-2.812-1.294,c-0.508-0.692-0.862-1.497-1.285-2.252,c0-0.56,0-1.12,0-1.68 ,c0.394-0.73,0.764-1.474,1.185-2.187,c1.827-3.098,3.668-6.186,5.507-9.276,c17.318-29.122,34.639-58.243,51.947-87.371 ,c0.32-0.539,0.579-1.146,0.723-1.754,c0.435-1.839-0.491-3.184-2.375-3.392,c-4.002-0.44-8.011-0.824-12.018-1.23 ,c-0.991-0.1-1.995-0.134-2.972-0.311,c-2.426-0.437-4.219-3.93-2.427-6.99,c13.608-23.237,27.149-46.513,40.712-69.777 ,c1.912-3.279,3.835-6.552,5.733-9.839,c1.374-2.38,0.595-4.022-2.1-4.479,c-2.435-0.413-4.871-0.825-7.31-1.218 ,c-1.905-0.307-3.133-1.599-3.339-3.508,c-0.137-1.279,0.133-2.424,0.785-3.549,c7.109-12.273,14.193-24.561,21.284-36.845 ,c3.915-6.782,7.833-13.562,11.743-20.347,c1.216-2.11,0.677-3.43-1.675-4.139,c-1.145-0.345-2.297-0.668-3.439-1.021 ,c-1.387-0.429-2.15-1.419-2.531-2.788,c-0.432-1.551,0.052-2.886,0.814-4.205,c10.335-17.885,20.669-35.77,30.972-53.673, c132.299,2.079,133.208,0.791,134.88,0.24z ";
     // forrestSet.add(
      //  s.path("M134.88,0.24, c0.4,0,0.8,0,1.2,0, c1.318,0.561,2.292,1.425,3.032,2.712,c7.78,13.547,15.611,27.065,23.427,40.592, c2.679,4.635,5.362,9.268,8.027,13.911, c1.807,3.148,0.698,5.975-2.722,7.007,c-0.84,0.253-1.684,0.496-2.523,0.751, c-2.438,0.742-2.956,2.026-1.692,4.213,c10.39,17.993,20.781,35.984,31.171,53.976,c0.719,1.246,1.455,2.482,2.142,3.746 ,c1.405,2.586-0.024,6.357-3.172,6.56,c-2.607,0.167-5.19,0.814-7.768,1.328,c-1.683,0.335-2.405,1.783-1.772,3.37 ,c0.191,0.479,0.449,0.934,0.709,1.381,c13.859,23.787,27.722,47.572,41.583,71.358,c1.589,2.727,3.221,5.431,4.752,8.19 ,c1.489,2.684-0.056,6.264-2.83,6.627,c-1.817,0.237-3.653,0.337-5.479,0.521,c-3.134,0.316-6.272,0.601-9.396,0.994 ,c-1.911,0.241-2.802,1.733-2.214,3.58,c0.238,0.749,0.619,1.467,1.023,2.147,c16.433,27.652,32.889,55.29,49.305,82.952 ,c3.091,5.207,6.028,10.505,9.037,15.761,c0,0.16,0,0.32,0,0.48,c-0.074,0.141-0.179,0.272-0.219,0.423 ,c-0.841,3.157-1.703,3.831-4.925,3.831,c-37.433,0-74.864,0-112.297,0,c-1.924,0-1.924,0.002-1.925,1.963 ,c0,20.196,0.001,40.392,0,60.588,c0,1.575-0.002,1.58-1.565,1.58,c-9.479,0.002-18.956,0.001-28.435,0.001 ,c-1.768,0-1.769-0.002-1.769-1.745,c0-20.035,0-40.071,0-60.107,c0-0.4-0.023-0.801,0.002-1.199,c0.048-0.75-0.243-1.132-1.035-1.082 ,c-0.438,0.027-0.879,0.002-1.319,0.002,c-36.433,0-72.865,0-109.297,0,c-1.2,0-2.402-0.042-3.599,0.012 ,c-1.183,0.053-2.138-0.374-2.812-1.294,c-0.508-0.692-0.862-1.497-1.285-2.252,c0-0.56,0-1.12,0-1.68 ,c0.394-0.73,0.764-1.474,1.185-2.187,c1.827-3.098,3.668-6.186,5.507-9.276,c17.318-29.122,34.639-58.243,51.947-87.371 ,c0.32-0.539,0.579-1.146,0.723-1.754,c0.435-1.839-0.491-3.184-2.375-3.392,c-4.002-0.44-8.011-0.824-12.018-1.23 ,c-0.991-0.1-1.995-0.134-2.972-0.311,c-2.426-0.437-4.219-3.93-2.427-6.99,c13.608-23.237,27.149-46.513,40.712-69.777 ,c1.912-3.279,3.835-6.552,5.733-9.839,c1.374-2.38,0.595-4.022-2.1-4.479,c-2.435-0.413-4.871-0.825-7.31-1.218 ,c-1.905-0.307-3.133-1.599-3.339-3.508,c-0.137-1.279,0.133-2.424,0.785-3.549,c7.109-12.273,14.193-24.561,21.284-36.845 ,c3.915-6.782,7.833-13.562,11.743-20.347,c1.216-2.11,0.677-3.43-1.675-4.139,c-1.145-0.345-2.297-0.668-3.439-1.021 ,c-1.387-0.429-2.15-1.419-2.531-2.788,c-0.432-1.551,0.052-2.886,0.814-4.205,c10.335-17.885,20.669-35.77,30.972-53.673, c132.299,2.079,133.208,0.791,134.88,0.24z").attr(attrs),
     // );
      
 
      view.render();

 
      console.log('Backbone : Global : AnimationsView : Initialized');
    },


    /**
     * render()
     */
    render: function() {
     
    },
    
    drawIntervals: function(x) {
      var view = this;
      var gap = view.defaults.width/x;
      var date = new Date();
      var hours = date.getHours();
      var path = 'M 0 50';
      var attr = {
        fill: '#fff' 
      };
     
      view.graph = view.svg.path(path).attr({stroke: '#fff', 'stroke-width': '2px', fill: 'none'});
    
    
    },
    parseWeather: function(data){
      var view = this;
      view.weather = data[0];
      view.animatedBackground();
      view.drawGraph();
    },

    animatedBackground: function(){
      var view = this;
    },

    drawGraph: function(){
        var view = this; 
        var path = 'M 0 '+ view.weatherQuality(0);
        var intervals = 12;
        var gap = view.defaults.width/intervals;

        for (var i = 0; i < intervals; i++){
          path += 'L ' + i*gap + ' ' + view.weatherQuality(i) + ' '; 
        };

        view.graph.animate({ path: path}, 500);
    },

    weatherQuality: function (num){
      var view = this;
      
      var avg  = (view.weather.daily.data[0].apparentTemperatureMax + view.weather.daily.data[0].apparentTemperatureMin)/2
      var temp = avg/view.weather.hourly.data[num].temperature;
      var clouds = view.weather.hourly.data[num].cloudCover/10;
      var percip = view.weather.hourly.data[num].precipIntensity/10;
      var windSpeed = view.weather.hourly.data[num].windSpeed;
      
      var qal = temp*50+(-windSpeed);
      
      return qal; 
    
    }

  });
});
